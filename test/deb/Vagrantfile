# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant box for testing
Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu2204"
  memory = 6144
  cpus = 4

  config.vm.provider :virtualbox do |v|
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.provider :libvirt do |v|
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provision "test", type: "shell", run: "once" do |sh|
    sh.inline = <<~SHELL
      set -euxo pipefail

      # Package configs
      KUBERNETES_VERSION=v1.29
      PROJECT_PATH=prerelease:/main

      curl -fsSL https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list
      curl -fsSL https://download.opensuse.org/repositories/isv:/kubernetes:/addons:/cri-o:/"$PROJECT_PATH":/build/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/cri-o-apt-keyring.gpg
      echo "deb [signed-by=/etc/apt/keyrings/cri-o-apt-keyring.gpg] https://download.opensuse.org/repositories/isv:/kubernetes:/addons:/cri-o:/$PROJECT_PATH:/build/deb/ /" | tee /etc/apt/sources.list.d/cri-o.list
      apt-get update

      apt-get install -y cri-o kubelet kubeadm kubectl
      systemctl start crio

      # Disable swap
      swapoff -a

      # Cluster setup
      modprobe br_netfilter
      sysctl -w net.ipv4.ip_forward=1
      kubeadm init

      # Check cluster
      export KUBECONFIG=/etc/kubernetes/admin.conf
      kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      kubectl wait -n kube-system --timeout=180s --for=condition=available deploy coredns
      kubectl wait --timeout=180s --for=condition=ready pods --all -A
      kubectl get pods -A
      kubectl run -i --restart=Never --image debian --rm debian -- echo test | grep test
    SHELL
  end
end
