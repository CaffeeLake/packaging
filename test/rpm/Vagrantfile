# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrant box for testing
Vagrant.configure("2") do |config|
  config.vm.box = "centos/stream9"
  memory = 8192
  cpus = 4

  config.vm.provider :virtualbox do |v, override|
    override.vm.box_url = "https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-Vagrant-9-latest.x86_64.vagrant-virtualbox.box"
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.provider :libvirt do |v, override|
    override.vm.box_url = "https://cloud.centos.org/centos/9-stream/x86_64/images/CentOS-Stream-Vagrant-9-latest.x86_64.vagrant-libvirt.box"
    v.memory = memory
    v.cpus = cpus
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true

  config.vm.provision "test", type: "shell", run: "once" do |sh|
    sh.inline = <<~SHELL
      set -euxo pipefail

      # Package configs
      KUBERNETES_VERSION=v1.29
      PROJECT_PATH=prerelease:/main

      cat <<EOF | tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/$KUBERNETES_VERSION/rpm/repodata/repomd.xml.key
EOF

      cat <<EOF | tee /etc/yum.repos.d/cri-o.repo
[cri-o]
name=CRI-O
baseurl=https://download.opensuse.org/repositories/isv:/kubernetes:/addons:/cri-o:/$PROJECT_PATH:/build/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/addons:/cri-o:/$PROJECT_PATH:/build/rpm/repodata/repomd.xml.key
EOF

      # Official package dependencies
      dnf install -y container-selinux

      dnf install -y cri-o kubelet kubeadm kubectl
      systemctl start crio

      # Disable swap
      swapoff -a

      # Cluster setup
      modprobe br_netfilter
      sysctl -w net.ipv4.ip_forward=1
      kubeadm init

      # Check cluster
      export KUBECONFIG=/etc/kubernetes/admin.conf
      kubectl taint nodes --all node-role.kubernetes.io/control-plane-
      kubectl wait -n kube-system --timeout=180s --for=condition=available deploy coredns
      kubectl wait --timeout=180s --for=condition=ready pods --all -A
      kubectl get pods -A
      kubectl run -i --restart=Never --image debian --rm debian -- echo test | grep test
    SHELL
  end
end
